{"ast":null,"code":"import _classCallCheck from \"/Users/Chuck/Documents/Web Sites/project-manager/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Chuck/Documents/Web Sites/project-manager/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Chuck/Documents/Web Sites/project-manager/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Chuck/Documents/Web Sites/project-manager/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Chuck/Documents/Web Sites/project-manager/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Chuck/Documents/Web Sites/project-manager/src/components/Tasks/TaskListItem.js\";\nimport React, { Component } from 'react';\nimport '@coreui/coreui';\nimport './TaskListItem.css';\nimport { DropdownButton, MenuItem } from 'react-bootstrap';\n\nvar classNames = require('classnames');\n\nvar TaskListItem =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TaskListItem, _Component);\n\n  function TaskListItem() {\n    _classCallCheck(this, TaskListItem);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TaskListItem).apply(this, arguments));\n  }\n\n  _createClass(TaskListItem, [{\n    key: \"render\",\n    value: function render() {\n      var classes = classNames({\n        'description-border-error': this.props.task.status === 3,\n        //blocked\n        'description-border-warning': this.props.task.status === 1 //blocked\n\n      });\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        className: classes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, this.props.task.description), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, this.props.task.assignee), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, this.props.task.dueDate), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        title: \"Status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        eventKey: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Action\"), React.createElement(MenuItem, {\n        eventKey: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Another action\"), React.createElement(MenuItem, {\n        eventKey: \"3\",\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Active Item\"), React.createElement(MenuItem, {\n        divider: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), React.createElement(MenuItem, {\n        eventKey: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Separated link\")), React.createElement(\"select\", {\n        className: \"form-control\",\n        value: this.props.task.status,\n        readOnly: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, this.props.statuses.map(function (status) {\n        return React.createElement(\"option\", {\n          value: status.id,\n          key: status.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, status.status);\n      }))), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Delete\")));\n    }\n  }]);\n\n  return TaskListItem;\n}(Component);\n\nexport default TaskListItem;","map":{"version":3,"sources":["/Users/Chuck/Documents/Web Sites/project-manager/src/components/Tasks/TaskListItem.js"],"names":["React","Component","DropdownButton","MenuItem","classNames","require","TaskListItem","classes","props","task","status","description","assignee","dueDate","statuses","map","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP;AACA,OAAO,oBAAP;AACA,SAAQC,cAAR,EAAwBC,QAAxB,QAAuC,iBAAvC;;AAEA,IAAIC,UAAU,GAAGC,OAAO,CAAC,YAAD,CAAxB;;IAEMC,Y;;;;;;;;;;;;;6BACM;AAEJ,UAAIC,OAAO,GAAGH,UAAU,CAAC;AACrB,oCAA4B,KAAKI,KAAL,CAAWC,IAAX,CAAgBC,MAAhB,KAA2B,CADlC;AACqC;AAC1D,sCAA8B,KAAKF,KAAL,CAAWC,IAAX,CAAgBC,MAAhB,KAA2B,CAFpC,CAEsC;;AAFtC,OAAD,CAAxB;AAKA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAEH,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKC,KAAL,CAAWC,IAAX,CAAgBE,WADrB,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKH,KAAL,CAAWC,IAAX,CAAgBG,QAArB,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKJ,KAAL,CAAWC,IAAX,CAAgBI,OAArB,CALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,cAAD;AACI,QAAA,KAAK,EAAC,QADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAGI,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHJ,EAII,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAC,GAAnB;AAAuB,QAAA,MAAM,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJJ,EAOI,oBAAC,QAAD;AAAU,QAAA,OAAO,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,EAQI,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BARJ,CADA,EAWI;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,IAAX,CAAgBC,MAAxD;AAAgE,QAAA,QAAQ,MAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ,KAAKF,KAAL,CAAWM,QAAX,CAAoBC,GAApB,CAAwB,UAACL,MAAD,EAAW;AAC/B,eACI;AAAQ,UAAA,KAAK,EAAEA,MAAM,CAACM,EAAtB;AAA0B,UAAA,GAAG,EAAEN,MAAM,CAACM,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA2CN,MAAM,CAACA,MAAlD,CADJ;AAGH,OAJD,CAFR,CAXJ,CANJ,EA2BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CA3BJ,CADJ;AAiCH;;;;EAzCsBT,S;;AA4C3B,eAAeK,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport '@coreui/coreui';\nimport './TaskListItem.css'\nimport {DropdownButton, MenuItem} from 'react-bootstrap'\n\nvar classNames = require('classnames');\n\nclass TaskListItem extends Component {\n    render(){\n\n        var classes = classNames({\n            'description-border-error': this.props.task.status === 3, //blocked\n            'description-border-warning': this.props.task.status === 1 //blocked\n        });\n\n        return (\n            <tr>\n                <td className={classes}>\n                    {this.props.task.description}\n                </td>\n                <td>{this.props.task.assignee}</td>\n                <td>{this.props.task.dueDate}</td>\n                <td>\n                <DropdownButton\n                    title=\"Status\">\n                    <MenuItem eventKey=\"1\">Action</MenuItem>\n                    <MenuItem eventKey=\"2\">Another action</MenuItem>\n                    <MenuItem eventKey=\"3\" active>\n                        Active Item\n                    </MenuItem>\n                    <MenuItem divider />\n                    <MenuItem eventKey=\"4\">Separated link</MenuItem>\n                </DropdownButton>\n                    <select className=\"form-control\" value={this.props.task.status} readOnly>\n                        {\n                            this.props.statuses.map((status) =>{\n                                return(\n                                    <option value={status.id} key={status.id}>{status.status}</option>\n                                )\n                            })\n                        }\n                    </select>\n                </td>\n                <td>\n                    <button type=\"button\" className=\"btn btn-danger\">Delete</button>\n                </td>\n            </tr>\n        );\n    }\n}\n\nexport default TaskListItem;"]},"metadata":{},"sourceType":"module"}